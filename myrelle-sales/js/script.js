// adicionar
const submit = document.getElementById('todoSubmit');
const input = document.getElementById('todoInput');


submit.addEventListener('click', montarLista);

// Adicionar itens na lista e criar uma li dentro da ul usando o m√©todo createElement(''). E esse elemento s√≥ ser√° criado a partir do evento de clique no bot√£o.


// adicionar
// submit.addEventListener('click', function(e){
    //   e.preventDefault();
    //   console.log(input.value)
    // })
    
    function montarLista(e){
      e.preventDefault(); //previne o comportamente padr√£o do navegador
  
  
  // Puxar o id da lista do html e armazenar em uma let ou const para utilizar mais vezes
  // document = vai at√© o html e pega o elemento que precisamos
  

  // ul = lista √© a m√£e e a li = item √© a filha
  const lista = document.getElementById('todoList');
  // const tag = document.getElementById('tag')
  const item = document.createElement('li'); //criando item n√£o existente no html
  const p = document.createElement('p');//criando item n√£o existente no html, para colocar a classe que est√° no css
  const form = document.getElementById('todoForm');
  const tagName = document.getElementById('tag');
  const todoMarkAll = document.getElementById('todoMarkAll');
  const todoRemoveAll = document.getElementById('todoRemoveAll');
  

  const s = tagName.value;
  const textSelect = document.createElement('p');
  const btnRemove = document.createElement('button');
  
  submit.addEventListener("click", function (event){
    event.preventDefault();
    
    if (input.value == ""){
      alert('O campo est√° vazio. Preencha para prosseguir')
    } else{
      const valorEtiqueta = document.getElementById('tag');
      const itemEtiqueta = document.createElement('p');
      itemEtiqueta.innerText = valorEtiqueta.value;
      itemEtiqueta.appendChild(valorEtiqueta);
      
      
    }                                         
    
  })
  
  p.textContent = input.value // p ao inv√©s de item. Atribuindo ao meu p um conte√∫do(atrav√©s do textContent) 

  // o meu conte√∫do recebe o valor do meu input, que foi armazenado no input do come√ßo
  // Para acessar o valor preciso colocar input. value porque s√≥ armazenei o elemento e n√£o o valor dele


  // Uso a const lista e o appendChild (que serve para acrescentar um valor e o item)
  lista.appendChild(item);
  item.appendChild(p)
  item.appendChild(textSelect);
  item.appendChild(btnRemove);
  // console.log(item)

  textSelect.textContent = s;
  btnRemove.textContent = 'üóëÔ∏è';

  btnRemove.addEventListener('click', function(){
    lista.remove();
  })



  // adicionando um escutador de evento
  // A ac√£o que ser√° disparda e a de colocar uma classe chamada checked que n√£o existe no meu elemento ainda, apenas no css.
  item.addEventListener('click',function(){
    p.classList.add('checked');
  })
  
  if(p.innerHTML.trim() == ""){
    alert('O campo est√° vazio. Adicione uma tarefa.');
    input.focus();
  }else{
    // console.log(lista);
    lista.appendChild(item);
    item.appendChild(p);
    // item.appendChild(btnRemove);
    form.reset();
  }  
  
  item.addEventListener('click', function(){
    p.classList.toggle('checked');
  })

  item.addEventListener('click', function(){
    p.classList.add('checked')
  })



  


  // classlist.add ou classlist.remove  
  const titulo = document.querySelector('h1');
  titulo.classList.add('todo__title');


  form.reset();
  
  
  todoMarkAll.addEventListener('click', allDone);
  
  todoMarkAll.addEventListener('click', function(){
   p.classList.add('checked');
 })

 todoRemoveAll.addEventListener('click', function(){
   p.remove();
 })

 function allDone(){
 if(todoMarkAll.innerText != 'Desmarcar todos'){
   p.classList.add('checked')
  }else{
    todoMarkAll.innerText = 'Desmarcar todos'
  }   
}


}

// p.textContent = input.value;
// item.appendChild(p);
// console.log(item)


// ul √© m√£e da li por isso vou chama-la aqui
// const ul = document.getElementById('todoList');
// ul.appendChild(li)